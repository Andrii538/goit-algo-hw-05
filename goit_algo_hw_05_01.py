
def caching_fibonacci():
    """ 
    Охоплююча функція для fibonacci(n). Задає змінну cache як словник, для 
    збереження вже порахованих чисел Фібоначчі внутрішньою функцією.\n
    Повертає:
    Внутрішню функцію fibonacci(n).
       """
    cache = {}
    
    def fibonacci(n):
        """ 
        Внутрішня функція для обчислення n-нного числа Фібоначчі. 
        Якщо число вже знаходиться у кеші, повертає значення з кешу.\n
        Аргумент:
        n: Ціле число, яке вказує на порядковий номер числа в послідовності чисел Фібоначчі.\n
        Повертає:
        Число фібоначі з порядковим номером 'n'.
        """
        match n:
            case n if n <= 0:
                return 0
            case 1:
                return 1
            case n if n in cache:
                return cache[n] # Якщо число вже у кеші, повертаємо його значення.
            case _:
                # Рекурсивно знаходимо задане число Фібоначчі.
                cache[n] = fibonacci(n - 1) + fibonacci(n - 2)
        return cache[n]
    return fibonacci

# Отримуємо функцію fibonacci
fib = caching_fibonacci()

# Використовуємо функцію fibonacci для обчислення чисел Фібоначчі
print(fib(10))  # Виведе 55
print(fib(15))  # Виведе 610

